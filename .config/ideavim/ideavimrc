"" Source your .vimrc
"source ~/.vimrc

"" -- Suggested options --
" Show a few lines of context around the cursor. Note that this makes the
" text scroll if you mouse-click near the start or end of the window.
set scrolloff=5

" Do incremental searching.
set incsearch
set hlsearch
set clipboard=unnamedplus
set relativenumber
set number
set scrolloff=8
set ignorecase
set smartcase
set smartindent

let g:mapleader = " "
let g:maplocalleader = " "

noremap <space> <nop>

noremap <A-a> :nohl<cr>
noremap <leader>ww :w<cr>
noremap <leader>wq :wq<cr>

noremap <A-o> moO<Esc>`o"
noremap <A-i> moo<Esc>`o"

inoremap <C-p><left><C-o>p
inoremap <A-d> <DELETE>
inoremap <C-d> <C-o>dw
inoreamap <A-w> <BACKSPACE>

inoremap <C-p> <left><C-o>

inoremap <A-j> <C-o>j
inoremap <A-k> <C-o>k
inoremap <A-h> <C-o>h
inoremap <A-l> <C-o>l

vnoremap <S-j> :m '>+1<CR>gv=gv<cr>
vnoremap <S-k> :m '<-2<CR>gv=gv<cr>

vnoremap p "_dP

" Don't use Ex mode, use Q for formatting.
map Q gq


"" -- Map IDE actions to IdeaVim -- https://jb.gg/abva4t
"" Map \r to the Reformat Code action
"map \r <Action>(ReformatCode)

"" Map <leader>d to start debug
"map <leader>d <Action>(Debug)

"" Map \b to toggle the breakpoint on the current line
"map \b <Action>(ToggleLineBreakpoint)
"
map grn <Action>(RenameElement)
map grf <Action>(QuickImplementations)
map grd <Action>(GotoDeclaration)
map ]d <Action>(GotoNextError)
map [d <Action>(GotoPreviousError)


" Find more examples here: https://jb.gg/share-ideavimrc
Plug 'machakann/vim-highlightedyank'
let g:highlightedyank_highlight_duration = "40"
Plug 'tpope/vim-surround'
Plug 'tpope/vim-commentary'
